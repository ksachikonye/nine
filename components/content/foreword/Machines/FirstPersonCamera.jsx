'use client'

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Amine.Elouneg (https://sketchfab.com/Amine.Elouneg)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/first-person-unnamed-camera-animation-6685615099ee47fa93cb532e2e979726
Title: First Person Unnamed Camera Animation
*/
import React, { Suspense, useEffect } from "react";
import { Canvas,useFrame} from '@react-three/fiber'
import { useGLTF, useAnimations,  useScroll, ContactShadows , Float, Environment } from "@react-three/drei";
import styled from 'styled-components'

const Grid = styled.div`
  position: absolute;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: start;
  font-family: 'ThunderBlack';
  font-size: 1.2em;
  line-height: 0.74em;
  color: #f7f4af;

  @media (max-width: 425px) {
    grid-template-columns: 1fr;
  }
`

const Left = styled.div`
  position: relative;
  display: grid;
  grid-template-rows: 1fr auto;
  width: 100%;
  height: 100%;
  padding: 100px;
  white-space: nowrap;
  font-family: 'ThunderThin';
  line-height: 1em;
  @media (max-width: 768px) {
    padding: 50px;
  }
`

const Right = styled.div`
  position: relative;
  display: flex;
  width: 100%;
  height: 100%;
  background: #f7f4af;
  color: #252525;
`

const Sub = styled.div`
  align-self: end;
  width: 200px;
  height: 2px;
  background: #f7f4af;
`

const Jumbo = styled.div`
  align-self: center;
  padding: 100px;
  font-size: 1.5em;
  color: #252525;
`

const Label = styled.div`
  position: absolute;
  bottom: 0;
  right: 0;
  font-family: 'ThunderThin';
  font-size: 0.2em;
  line-height: 0.1em;
  color: #252525;
  padding: 100px;

  @media (max-width: 768px) {
    padding: 50px;
  }

  @media (max-width: 425px) {
    padding: 20px;
  }
`

export default function Underlay() {
  return (
    <Grid>
      <Left>
        <div>
          THE SISTRUM
          <br />
          IS DESIGNED
          <br />
          TO REPRESENT
          <br />
          CONTINUAL
          <br />
          AGITATION.
        </div>
        <Sub />
      </Left>
      <Right>
        <Jumbo>M1</Jumbo>
      </Right>
    </Grid>
  )
}


export function Model(props) {
    const scroll = useScroll()
  const { nodes, materials, animations } = useGLTF(
    "/assets/models/devices/first_person_unnamed_camera.glb"
  );
  const { ref, actions } = useAnimations(animations)
  useEffect(() => void (actions["v_rif_aug_aug_ref_skeleton|v_rif_aug_aug_ref_skeletonAction.001"].reset().play().paused = true), [])
  useFrame(() => (actions["v_rif_aug_aug_ref_skeleton|v_rif_aug_aug_ref_skeletonAction.001"].time = actions["v_rif_aug_aug_ref_skeleton|v_rif_aug_aug_ref_skeletonAction.001"].getClip().duration * scroll.offset))
  return (
    <group ref={ref} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={0}>
          <group name="cam_animfbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Camera005"
                  position={[29.925, 21.375, 26.031]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={4}
                >
                  <group name="Object_5" />
                </group>
                <group
                  name="Lamp006"
                  position={[16.305, 23.615, -4.022]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={4}
                >
                  <group name="Object_7" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_8" />
                  </group>
                </group>
                <group
                  name="Camera004"
                  position={[26.184, 18.703, 22.777]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={3.5}
                >
                  <group name="Object_10" />
                </group>
                <group
                  name="Lamp005"
                  position={[14.267, 20.664, -3.519]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={3.5}
                >
                  <group name="Object_12" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_13" />
                  </group>
                </group>
                <group
                  name="Camera003"
                  position={[37.406, 26.718, 32.538]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={5}
                >
                  <group name="Object_15" />
                </group>
                <group
                  name="Lamp004"
                  position={[20.381, 29.519, -5.027]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={5}
                >
                  <group name="Object_17" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_18" />
                  </group>
                </group>
                <group
                  name="Lamp003"
                  position={[20.381, 29.519, -5.027]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={5}
                >
                  <group name="Object_20" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_21" />
                  </group>
                </group>
                <group
                  name="Lamp002"
                  position={[20.381, 29.519, -5.027]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={5}
                >
                  <group name="Object_23" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_24" />
                  </group>
                </group>
                <group
                  name="Camera002"
                  position={[37.406, 26.718, 32.538]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={5}
                >
                  <group name="Object_26" />
                </group>
                <group
                  name="Camera001"
                  position={[44.887, 32.062, 39.046]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={6}
                >
                  <group name="Object_28" />
                </group>
                <group
                  name="Lamp001"
                  position={[24.457, 35.423, -6.033]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={6}
                >
                  <group name="Object_30" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_31" />
                  </group>
                </group>
                <group
                  name="v_rif_aug_aug_ref_skeleton"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                >
                  <group name="Object_33">
                    <primitive object={nodes._rootJoint} />
                    <skinnedMesh
                      name="Object_119"
                      geometry={nodes.Object_119.geometry}
                      material={materials.v_hands}
                      skeleton={nodes.Object_119.skeleton}
                    />
                    <skinnedMesh
                      name="Object_120"
                      geometry={nodes.Object_120.geometry}
                      material={materials.sleeve_diffuse}
                      skeleton={nodes.Object_120.skeleton}
                    />
                    <skinnedMesh
                      name="Object_121"
                      geometry={nodes.Object_121.geometry}
                      material={materials.glass}
                      skeleton={nodes.Object_121.skeleton}
                    />
                    <skinnedMesh
                      name="Object_122"
                      geometry={nodes.Object_122.geometry}
                      material={materials.watch_diffuse}
                      skeleton={nodes.Object_122.skeleton}
                    />
                    <skinnedMesh
                      name="Object_123"
                      geometry={nodes.Object_123.geometry}
                      material={materials["blue_light.001"]}
                      skeleton={nodes.Object_123.skeleton}
                    />
                    <skinnedMesh
                      name="Object_124"
                      geometry={nodes.Object_124.geometry}
                      material={materials["green_light.001"]}
                      skeleton={nodes.Object_124.skeleton}
                    />
                    <skinnedMesh
                      name="Object_125"
                      geometry={nodes.Object_125.geometry}
                      material={materials["red_light.001"]}
                      skeleton={nodes.Object_125.skeleton}
                    />
                    <skinnedMesh
                      name="Object_126"
                      geometry={nodes.Object_126.geometry}
                      material={materials["camera_diffuse.001"]}
                      skeleton={nodes.Object_126.skeleton}
                    />
                    <skinnedMesh
                      name="Object_127"
                      geometry={nodes.Object_127.geometry}
                      material={materials["backward_glass.001"]}
                      skeleton={nodes.Object_127.skeleton}
                    />
                    <skinnedMesh
                      name="Object_128"
                      geometry={nodes.Object_128.geometry}
                      material={materials["screen.001"]}
                      skeleton={nodes.Object_128.skeleton}
                    />
                    <skinnedMesh
                      name="Object_129"
                      geometry={nodes.Object_129.geometry}
                      material={materials["forward_glass.001"]}
                      skeleton={nodes.Object_129.skeleton}
                    />
                    <group
                      name="Object_118"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                    />
                  </group>
                </group>
                <group
                  name="v_rif_aug_aug_ref"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <group
                  name="Lamp"
                  position={[407.625, 590.386, -100.545]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={100}
                >
                  <group name="Object_132" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_133" />
                  </group>
                </group>
                <group
                  name="Camera"
                  position={[-355.516, 74.942, -5.331]}
                  rotation={[0, -1.571, 0]}
                  scale={100}
                >
                  <group name="Object_135" />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/assets/models/devices/first_person_unnamed_camera.glb");

export default function FirstPersonCamera() {
  return (
    <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 1.1], fov: 45 }}>
       <hemisphereLight
        args={[0xffffff, 0xffffff, 1.0]}
        color={0x7095c1}
        position={[0, 50, 0]}
        groundColor={0xcbc1b2}
      />
      <directionalLight
        position={[100, 200, 100]}
        castShadow
        shadow-mapSize={[4096, 4096]}
        shadow-camera-left={-22}
        shadow-camera-bottom={-22}
        shadow-camera-right={22}
        shadow-camera-top={22}
      />
      <Environment files="https://dl.polyhaven.org/file/ph-assets/HDRIs/hdr/1k/potsdamer_platz_1k.hdr" />
      <ambientLight intensity={2} />
      <spotLight position={[1, 6, 1.5]} angle={0.2} penumbra={1} intensity={2.5} castShadow shadow-mapSize={[2048, 2048]} />
      <spotLight position={[-5, 5, -1.5]} angle={0.03} penumbra={1} intensity={4} castShadow shadow-mapSize={[1024, 1024]} />
      <spotLight position={[5, 5, -5]} angle={0.3} penumbra={1} intensity={4} castShadow={true} shadow-mapSize={[256, 256]} color="#ffffc0" />
      <Suspense fallback={null}>
      <Float speed={2}>
        <Model scale={0.225} position={[0, -0.09, 0]} />
        <ContactShadows frames={1} rotation-x={[Math.PI / 2]} position={[0, -0.33, 0]} far={0.4} width={2} height={2} blur={4} />
         </Float>
      </Suspense>
    </Canvas>
  )
}




